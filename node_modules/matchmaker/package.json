{
  "author": {
    "name": "David Wee",
    "email": "rook2pawn@gmail.com",
    "url": "http://rook2pawn.com"
  },
  "name": "matchmaker",
  "description": "policy free matchmaking to pair objects",
  "version": "0.1.0",
  "homepage": "https://github.com/rook2pawn/node-matchmaker",
  "repository": {
    "type": "git",
    "url": "git://github.com/rook2pawn/node-matchmaker.git"
  },
  "main": "index.js",
  "devDependencies": {},
  "readme": "matchmaker\n==========\n\nmatchmaker is a VERY simple, perhaps, simplistic matchmaker that creates two-element match sets.\n\nTo create a match you need a policy function that takes two elements\nand returns an integer value. If the integer value is higher than some\nthreshold, it is considered a match and emits 'match'.\n\n\nSay we want to match people by some rank. we could do the following:\n\n    var Matchmaker = require('matchmaker');\n    var mymatch = new Matchmaker;\n    mymatch.policy = function(a,b) {\n        if (Math.abs(a.rank-b.rank) < 20)\n            return 100\n        else \n            return 0\n    };\n    mymatch.on('match', function(result) {\n        console.log(result.a); // match a\n        console.log(result.b); // match b\n    });\n    mymatch.start();\n\nThen we can \n    \n    mymatch.push({user:'walter',rank:1450});\n    mymatch.push({user:'skyler',rank:1465});\n\nProperties\n==========\n\n.policy\n-------\nYou can set\n   \n    mymatch.policy = function(a,b) {\n        // do some comparisons...\n        // your logic\n        // if it satisfies\n           // return 100 (or threshold)\n        // else\n        // return 0 (or below threshold)\n    }\n\n.prefs\n------\nYou can set\n    \n    mymatch.prefs.checkinterval = 5000; // default\n    mymatch.prefs.threshold = 100; // default\n    mymatch.prefs.maxiters = 5; // default\n\n.prefs.checkinterval is the number of milliseconds between insepcting the queue with the policy function\n\n.prefs.threshold is the integer that is compared with the policy function output\n\n.prefs.maxiters is the maximum number of iterations to process the entire queue between checkintervals.\n\n.queue\n------\nThis is the internal queue for storing elements to be matched.\n\nMETHODS\n=======\n\n.push\n-----\n.push allows you to push elements into the queue.\n\n.start\n------\n.start starts the service.\n\n.stop\n-----\n.stop stops the service.\n\n\nLICENSE\n=======\n\nnode-matchmaker Copyright (c) 2011 David Wee rook2pawn@gmail.com\n\nFree software provided under the MIT License\nhttp://opensource.org/licenses/mit-license.php\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rook2pawn/node-matchmaker/issues"
  },
  "_id": "matchmaker@0.1.0",
  "_shasum": "9a90495698e87c08ca97daa2354e036f708a7e9f",
  "_from": "matchmaker@",
  "_resolved": "https://registry.npmjs.org/matchmaker/-/matchmaker-0.1.0.tgz"
}
